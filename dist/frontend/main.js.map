{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/tasks/tasks.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/tasks.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"my-5 mx-auto col-3 d-flex flex-column border border-dark\" style=\"min-width:20rem;\">\n  <h1 class=\"main-title\">LISTA DE TAREAS</h1>\n  <div class=\"p-2 mb-3\" style=\"min-height :16rem;\">\n    <ul class=\"list-group list\" *ngFor=\"let task of tasksList\">\n      <li [ngClass]=\"task.tasks_status ? 'done' : 'to-do'\" id='task.tasks_id' class=\"d-flex task\">\n        <span class=\"col-8\" [value]=\"task.tasks_text\" name=\"\" id=\"\">\n          {{ task.tasks_text }}\n        </span>\n        <div class=\"col-4 taskdiv\">\n          <input type=\"checkbox\" class=\"col-1 form-check-input\" (click)=\"updateTask(task.tasks_id, task)\"\n            [(ngModel)]=\"task.tasks_status\" />\n          <input type=\"button\" value=\"Borrar\" id=\"\" class=\"col-3 deleteTask\" (click)=\"deleteTask(task.tasks_id)\" />\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"d-flex mt-4 bottom\">\n    <input type=\"text\" placeholder=\" Ingresá una tarea\" class=\"col-9 main-tf\"\n      (keyup.enter)=\"task.tasks_text===''? notify() : addTask()\" [(ngModel)]=\"task.tasks_text\" />\n    <button type=\"submit\" value=\"Agregar\" class=\"col-3 main-btn\"\n      (click)=\"task.tasks_text===''? notify() : addTask()\">Agregar</button>\n  </div>\n</div>","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Task } from 'src/app/models/Task';\nimport { TasksService } from '../../services/tasks.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css'],\n})\nexport class TasksComponent implements OnInit {\n\n  constructor(private tasksService: TasksService) { }\n  tasksList;\n  task: Task = {\n    tasks_text: '',\n    tasks_status: false\n  };\n\n  ngOnInit() {\n    this.getTasks();\n  }\n\n//obtener las tareas de la base de datos\n  getTasks() {\n    this.tasksService.getTasks().subscribe(\n      res => {\n        this.tasksList = res;\n      },\n      err => console.log(err)\n    );\n  }\n\n  //agregar una tarea a la lista\n  addTask() {\n    this.tasksService.saveTask(this.task)\n      .subscribe(\n        res => {\n          window.location.reload();\n        },\n        err => console.log(err)\n      );\n  }\n  //advertir al usuario de que el textfield esta vacio\n  notify() {\n    alert(\"El text field está vacío.\");\n  }\n\n  //modificar una tarea de la lista\n  updateTask(id: string, oldTask: Task) {\n    const task: Task = {\n      tasks_id: oldTask.tasks_id,\n      tasks_status: !oldTask.tasks_status,\n      tasks_text: oldTask.tasks_text\n    }\n    this.tasksService.updateTask(id, task)\n      .subscribe(\n        res => {\n          window.location.reload();\n        },\n        err => console.log(err)\n      );\n  }\n  //borrar una tarea de la lista\n  deleteTask(id: string) {\n    this.tasksService.deleteTask(id)\n      .subscribe(\n        res => {\n          window.location.reload();\n        },\n        err => console.log(err)\n      );;\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-tasks>\r\n\r\n</app-tasks>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\n\nimport { TasksService } from  './services/tasks.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TasksService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Task } from '../models/Task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  API_URI = 'http://localhost:3000/tasks';\n  constructor(private http: HttpClient) { };\n\n    getTasks(){\n      return this.http.get(`${this.API_URI}`);\n    }\n\n    saveTask(task: Task){\n      return this.http.post(`${this.API_URI}`, task);\n    }\n\n    deleteTask(id: string){\n      return this.http.delete(`${this.API_URI}:${id}`);\n    }\n\n    updateTask(id : any, newTask: any){\n      return this.http.put(`${this.API_URI}:${id}`, newTask);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TasksComponent } from './components/tasks/tasks.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tasks',\n    component: TasksComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}